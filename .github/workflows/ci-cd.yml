name: CI/CD Pipeline

on:
  push:
    branches: [main]


  



env:
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  JFROG_URL: ${{ secrets.JFROG_URL }}
  JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
  JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
 

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    ### ---------------------- ANGULAR BUILD ----------------------
    

    ### ---------------------- JAVA BUILD ----------------------
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build Java App with Maven
      run: |
        cd code-with-quarkus
        mvn clean install

    ### ---------------------- PYTHON BUILD ----------------------
   


    

    ### ---------------------- PUBLISH TO NEXUS ----------------------
   

    ### ---------------------- PUBLISH TO JFROG ----------------------
   
    - name: Upload JAR to JFrog
      run: |
        curl -u $JFROG_USERNAME:$JFROG_PASSWORD \
          -T **/target/*.jar \
          "$JFROG_URL/libs-release-local/my-java-app.jar"





    ### ---------------------- PYTHON BUILD ----------------------
   

    ### ---------------------- SONARQUBE SCAN ----------------------
    - name: SonarQube Scanner (Java)
      run: |
        cd code-with-quarkus
        mvn sonar:sonar \
          -Dsonar.projectKey=java-app \
          -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
          -Dsonar.login=${{ env.SONAR_TOKEN }}

    - name: SonarQube Scan (Java)
      uses: SonarSource/sonarqube-scan-action@v2.0.0
      with:
        projectBaseDir: code-with-quarkus
        args: >
          -Dsonar.projectKey=java-app
          -Dsonar.sources=src
          -Dsonar.java.binaries=target
        

      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}